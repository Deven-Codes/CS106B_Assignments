pointT nextPt;
	if(((curPt.row == 0) || (curPt.row == (rows - 1))) || ((curPt.col == 0) || (curPt.col == (cols - 1)))) {

		int bound = 0;
		if ((curPt.row == 0) || (curPt.row == (rows - 1))) bound++;

		if((curPt.col == 0) || (curPt.col == (cols - 1))) bound++;
		
		if(bound == 1){
			double chance = 0.33;
			if(RandomChance(0.5)) {
				if(curPt.row == 0) { 
					if(RandomChance(chance)) {
						nextPt.row = curPt.row + 1; 
					} else if(RandomChance(chance)) {
						nextPt.col = curPt.col + 1;
					} else {
						nextPt.col = curPt.col - 1;
					}
				} else {
					if(RandomChance(chance)) {
						nextPt.row = curPt.row - 1; 
					} else if(RandomChance(chance)) {
						nextPt.col = curPt.col + 1;
					} else {
						nextPt.col = curPt.col - 1;
					}
				}
			} else{
				if(curPt.col == 0) { 
					if(RandomChance(chance)) {
						nextPt.col = curPt.col + 1;
					} else if(RandomChance(chance)) {
						nextPt.row = curPt.row + 1;
					} else {
						nextPt.row = curPt.row - 1;
					}
				} else {
					if(RandomChance(chance)) {
						nextPt.row = curPt.col - 1; 
					} else if(RandomChance(chance)) {
						nextPt.row = curPt.row + 1;
					} else {
						nextPt.row = curPt.row - 1;
					}
				}
			}
		} else if(bound == 2) {
			if(curPt.row == 0 && curPt.col == 0) {
				if(RandomChance(0.5)) {
					nextPt.row = curPt.row + 1;
				} else {
					nextPt.col = curPt.col + 1;
				}
			} else if(curPt.row == (rows - 1) && curPt.col == 0) {
				if(RandomChance(0.5)) {
					nextPt.row = curPt.row - 1;
				} else {
					nextPt.col = curPt.col + 1;
				}
			} else if (curPt.row == 0 && curPt.col == (cols - 1)) {
				if(RandomChance(0.5)) {
					nextPt.row = curPt.row + 1;
				} else {
					nextPt.col = curPt.col - 1;
				}
			} else {
				if(RandomChance(0.5)) {
					nextPt.row = curPt.row - 1;
				} else {
					nextPt.col = curPt.col - 1;
				}
			}
		}
	} else {	
		if(RandomChance(0.5)) {
			if(RandomChance(0.5)) {
				nextPt.row = curPt.row - 1;
			} else {
				nextPt.row = curPt.row + 1;
			}
		} else {
			if(RandomChance(0.5)) {
				nextPt.col = curPt.col - 1;
			} else {
				nextPt.col = curPt.col + 1;
			}
		}
	}

	return nextPt;